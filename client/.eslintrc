{
  parser: "@typescript-eslint/parser",
  plugins: [
    "@typescript-eslint",
    "react"
  ],
  "extends": [
    "standard",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "settings": {
    "react": {
      "createClass": "createReactClass", // Regex for Component Factory to use,
                                         // default to "createReactClass"
      "pragma": "React",  // Pragma to use, default to "React"
      "fragment": "Fragment",  // Fragment to use (may be a property of <pragma>), default to "Fragment"
      "version": "detect", // React version. "detect" automatically picks the version you have installed.
                           // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                           // default to latest and warns if missing
                           // It will default to "detect" in the future
      "flowVersion": "0.53" // Flow version
    },
    "propWrapperFunctions": [
        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
        "forbidExtraProps",
        {"property": "freeze", "object": "Object"},
        {"property": "myFavoriteWrapper"}
    ],
    "linkComponents": [
      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
      "Hyperlink",
      {"name": "Link", "linkAttribute": "to"}
    ]
  },
  "rules": {
    "semi": [2, "always"],
    "indent": ["error", 2],
    "space-in-parens": ["error", "never"],
    "array-bracket-spacing": ["error", "never"],
    "object-curly-spacing": ["error", "always"],
    "template-curly-spacing": ["error", "never"],
    "comma-dangle": ["error", "always-multiline"],
    "no-return-await": 0,
    "max-len": ["error", { "code": 100 }],
    "quotes": [2, "double", "avoid-escape"],
    "space-before-function-paren": [
      2,
      {
        "named": "never",
        "anonymous": "never",
        "asyncArrow": "always"
      }
    ],
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-invalid-regexp": 2,
    "react/prop-types": 2,
    "react/default-props-match-prop-types": 2,
    "react/forbid-foreign-prop-types": 2,
    "react/react-in-jsx-scope": 0,
    "react/button-has-type": 2,
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/consistent-type-assertions": 2,
    "@typescript-eslint/consistent-type-imports": 2,
    "@typescript-eslint/no-unused-vars": ["error", { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }],
  }
}
